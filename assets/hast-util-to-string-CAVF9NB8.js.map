{"version":3,"file":"hast-util-to-string-CAVF9NB8.js","sources":["../../node_modules/hast-util-to-string/lib/index.js"],"sourcesContent":["/**\n * @import {Nodes, Parents} from 'hast'\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n"],"names":["toString","node","all","one","index","result"],"mappings":"AAYO,SAASA,EAASC,EAAM,CAG7B,MAAI,aAAcA,EACTC,EAAID,CAAI,EAIV,UAAWA,EAAOA,EAAK,MAAQ,EACxC,CAQA,SAASE,EAAIF,EAAM,CACjB,OAAIA,EAAK,OAAS,OACTA,EAAK,MAGP,aAAcA,EAAOC,EAAID,CAAI,EAAI,EAC1C,CAQA,SAASC,EAAID,EAAM,CACjB,IAAIG,EAAQ,GAEZ,MAAMC,EAAS,CAAA,EAEf,KAAO,EAAED,EAAQH,EAAK,SAAS,QAC7BI,EAAOD,CAAK,EAAID,EAAIF,EAAK,SAASG,CAAK,CAAC,EAG1C,OAAOC,EAAO,KAAK,EAAE,CACvB","x_google_ignoreList":[0]}